1) Identify Opportunity
2) Goal
3) Plan
4) Build/Develop
5) Launch
6) Assess & Learn

1) Identify Opportunity - 
    - Understand the global trend and where the business is growing. Clear understanding about where the opportunity lies.
    - Understand user insights, what user thinks and likes/dislikes. If dislikes that's the thing to solve. So if you don't
      understand the problem you will solve a wrong problem.
    - Once you know the global trend and users insights next is how to know which one is the biggest opportunity , that is where
      comes prioritization. So how to prioritize? Data and analytics.
      
2) Goal - 

3) Plan - After strategy now time for execution - What you are going to build. 
          - Map out all the dependencies(MoSCoW).
          - Create a time line
          - Write a product brief (opportunity, goals , teams)
          - Develop the product specs
          - Design - how will the product look like
          - Establish communication channel with all the stack holders while developing the plan (WIP - work in progress)
          
4) Develop/Build - Work closely with engineering teams, help manage process, facilitate communication between teams, prioritize back logs and bug fixes.
                  explain complexity of the product and come out with detail time line. Not to forget test plan should be ready as development is done
                  when working tested software is ready to release.This is just good to test phase not good to launch. Once successfully tested then comes
                  launch.
                  
5) Launch - Align things and keep right teams in loop with right strategy. Some company has go-to-market strategy for launch.

6) Asses/Learn - After launch have to measure and figure out what did work that could be amplified in next strategy and what could have been better (gaps)
                and this is again identifying opportunity to fix in next cycle.
                
There are two school of thoughts about how to implement - Lean and Waterfall. In reality have to mix it up .          

It's the process to get to the solution that matters not the solution.          


                

